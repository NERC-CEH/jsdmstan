% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pp_check.R
\name{jsdm_statsummary}
\alias{jsdm_statsummary}
\title{Extract summary statistics for a \code{jsdmStanFit} model}
\usage{
jsdm_statsummary(
  object,
  species = NULL,
  sites = NULL,
  summary_stat = "sum",
  post_type = "linpred",
  calc_over = "site",
  simplify = TRUE,
  draw_ids = NULL,
  ndraws = NULL,
  ...
)
}
\arguments{
\item{object}{A \code{jsdmStanFit} model object}

\item{species}{Which species to include in the summary statistic, by default all}

\item{sites}{Which sites to include in the summary statistic, by default all}

\item{summary_stat}{The summary statistic to be used, by default \code{sum} but
any function can be used.}

\item{post_type}{The type of posterior prediction to be used, either
\code{"linpred"} for \code{\link[=posterior_linpred.jsdmStanFit]{posterior_linpred.jsdmStanFit()}} or \code{"predict"} for
\code{\link[=posterior_predict.jsdmStanFit]{posterior_predict.jsdmStanFit()}}}

\item{calc_over}{Whether to calculate the summary statistic by site or species, by
default \code{species}}

\item{simplify}{Whether to simplify the output into a matrix, by default
\code{TRUE}}

\item{draw_ids}{The IDs of the draws to be used, as a numeric vector}

\item{ndraws}{Number of draws, by default the number of samples in the
posterior. Will be sampled randomly from the chains if fewer than the
number of samples.}

\item{...}{Arguments passed to the posterior prediction function}
}
\value{
If \code{simplify = TRUE} then a matrix where each row is a draw and each
column is either a site (if \code{calc_over = "site"}) or a species (if
\code{calc_over = "species"}).
}
\description{
This function extracts the predicted Y values for within the models and then
calculates summary statistics for each simulated community. The default is to sum
all the predicted scores for each site.
}
\examples{
\dontrun{
# First simulate data and fit the jsdmStan model:
gllvm_data <- gllvm_sim_data(
  N = 100, S = 9, D = 2,
  family = "bernoulli"
)
gllvm_fit <- stan_gllvm(dat_list = gllvm_data, family = "bernoulli")

# The default is to return a matrix:
jsdm_statsummary(gllvm_fit)

# The above returns the linear predictor, while we may want to get the posterior
# prediction instead:
jsdm_statsummary(gllvm_fit, post_type = "predict")

# This can be limited to a specific set of species and/or sites:
jsdm_statsummary(gllvm_fit, species = 1:5, sites = seq(5, 95, 10))
}

}
\seealso{
pp_check.jsdmStanFit
}
